/protected:
  get:
    tags:
      - Users
    summary: Access protected route
    security:
      - bearerAuth: []
    responses:
      200:
        description: Access granted to protected route
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Access granted to protected route"
      401:
        $ref: '#/components/responses/UnauthorizedError'

/request-reset-password:
  post:
    tags:
      - Users
    summary: Request password reset
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
            properties:
              email:
                type: string
                format: email
    responses:
      200:
        description: Password reset email sent
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Password reset email sent"
      404:
        description: User not found

/reset-password:
  post:
    tags:
      - Users
    summary: Reset password with token
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - token
              - newPassword
            properties:
              token:
                type: string
              newPassword:
                type: string
    responses:
      200:
        description: Password reset successful
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Password reset successful"
      400:
        description: Invalid or expired token 